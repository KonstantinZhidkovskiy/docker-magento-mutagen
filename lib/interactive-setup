#!/bin/bash

function print_header()
{
    local s=("$@") b w
    for l in "${s[@]}"; do
        ((w<${#l})) && { b="$l"; w="${#l}"; }
    done
    tput setaf 3

    echo "+-${b//?/-}-+"
    echo "| ${b//?/ } |"

    for l in "${s[@]}"; do
        printf '| %s%*s%s |\n' "$(tput setaf 4)" "-$w" "$l" "$(tput setaf 3)"
    done

    echo "| ${b//?/ } |"
    echo "+-${b//?/-}-+"

    tput sgr 0
}

print_header \
    'Mage2click' \
    '' \
    'Welcome to interactive setup of #Docker #Magento #Mutagen' \
    'development environment.' \
    '' \
    'https://mage2.click' \
    'https://github.com/mage2click/docker-magento-mutagen'

echo
read -p "Specify desired domain for project [magento2.test]: " DOMAIN

DOMAIN=${DOMAIN:-magento2.test}

RES=
while grep -qw "$DOMAIN" /etc/hosts || [ -z "$DOMAIN" ]; do
    if [ -z "$DOMAIN" ]; then
        echo "Domain cannot be empty!"
    else
        echo
        echo "Domain $DOMAIN is already existed in /etc/hosts! Choose an option:"
        select opts in "Proceed with this domain" "Specify new domain"; do
            case $opts in
                "Specify new domain" ) RES=1; break;;
                "Proceed with this domain" ) break;;
            esac
        done
    fi

    if [[ -z $RES ]]; then
        break
    else
        echo
        read -p "New domain: " DOMAIN
    fi
done

if ! grep -qw "$DOMAIN" /etc/hosts; then
    echo
    echo "Your system password has been requested to add an entry to /etc/hosts..."
    echo "127.0.0.1 $DOMAIN" | sudo tee -a /etc/hosts
fi

RES=
echo
echo "Download Magento archive from official repo or use local downloaded Magento zip archive?"
select opts in "Download archive" "Use local zip archive"; do
    case $opts in
        "Download archive" ) RES=1; break;;
        "Use local zip archive" ) break;;
    esac
done

echo
if [[ -z $RES ]]; then
    read -p "Full path to local Magento zip archive: " ARCHIVE

    while ! [ -f "$ARCHIVE" ]; do
        echo "Specified path does not exists!"
        read -p "Full path to local Magento zip archive: " ARCHIVE
    done
else
    read -p "Magento version to download? [2.3.1]: " VERSION
fi

echo
echo "Select optional features for development environment:"

echo
echo "Use Varnish cache?"
select opts in "Yes" "No"; do
    case $opts in
        "Yes" ) MAILHOG=1; break;;
        "No" ) break;;
    esac
done

echo
echo "Use MailHog email testing tool?"
select opts in "Yes" "No"; do
    case $opts in
        "Yes" ) MAILHOG=1; break;;
        "No" ) break;;
    esac
done

echo
echo "Use RabbitMQ message-broker?"
select opts in "Yes" "No"; do
    case $opts in
        "Yes" ) RABBITMQ=1; break;;
        "No" ) break;;
    esac
done

echo
echo "Use cron service?"
select opts in "Yes" "No"; do
    case $opts in
        "Yes" ) CRON=1; break;;
        "No" ) break;;
    esac
done

echo
echo "What PHP version to use?"
select opts in "7.1" "7.2" "7.3"; do
    case $opts in
        "7.1" ) PHPVER='7.1'; break;;
        "7.2" ) PHPVER='7.2'; break;;
        "7.3" ) PHPVER='7.3'; break;;
    esac
done

echo
echo "Run composer install prior to Magento bin/magento setup:install?"
select opts in "Yes" "No"; do
    case $opts in
        "Yes" ) COMPOSER=1; break;;
        "No" ) break;;
    esac
done

echo
echo "Save installation log into file?"
select opts in "Yes" "No"; do
    case $opts in
        "Yes" ) LOG=1; break;;
        "No" ) break;;
    esac
done

bin/setup \
    $DOMAIN \
    $ARCHIVE \
    $VERSION \
    $MAILHOG \
    $RABBITMQ \
    $CRON \
    $PHPVER \
    $LOG \
    $COMPOSER
